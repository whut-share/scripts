1. 查看Gpu编号 watch nvidia-smi

2.程序开头指定程序运行的Gpu,设置-1不使用gpu.
  os.environ['CUDA_VISIBLE_DEVICES'] = '1'

3.创建tensorflow的Session,配置使用
  import os
  from keras.backend.tensorflow_backend import set_session


  config = tf.ConfigProto()
  config.gpu_options.per_process_gpu_memory_fraction = 0.1
  set_session(tf.Session(config=config))

4.程序运行完毕，关闭Session
  K.clear_session()
  
5.Keras load_model 报错：ValueError: Unknown loss function

原因：未找到自定义的损失函数，导入即可。参考：https://blog.csdn.net/dugudaibo/article/details/83034054

例子：

      #  metric function and loss function
      def dice_coef(y_true, y_pred):
        y_true_f = K.flatten(y_true)
        y_pred_f = K.flatten(y_pred)
        intersection = K.sum(y_true_f * y_pred_f)
        return (2. * intersection + smooth) / (K.sum(y_true_f) + K.sum(y_pred_f) + smooth)


      def dice_coef_loss(y_true, y_pred):
        return -dice_coef(y_true, y_pred)

      # load model 
      weight_path = './weights.h5'
      model = load_model(weight_path,custom_objects={'dice_coef_loss': dice_coef_loss,'dice_coef':dice_coef})
      
6.同一个python脚本中加载两个Keras模型时，一般第一个模型会出现错误如下：
    ValueError: Tensor Tensor("Sigmoid_2:0", shape=(?, 17), dtype=float32) is not an element of this graph.
    
    原因：多模型Graph互相影响，参考：https://github.com/keras-team/keras/issues/2397
    
    解决：
        #Right after loading or constructing your model, save the TensorFlow graph:

        graph = tf.get_default_graph()
        #In the other thread (or perhaps in an asynchronous event handler), do:

        global graph
        with graph.as_default():
            (... do inference here ...)

